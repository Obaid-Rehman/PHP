<?php
/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Tests;

use PQAPIV2Lib\Exceptions\ApiException;
use PQAPIV2Lib\Exceptions;
use PQAPIV2Lib\ApiHelper;
use PQAPIV2Lib\Models;
use PHPUnit\Framework\TestCase;

class ProgramControllerTest extends TestCase
{
    /**
     * @var \PQAPIV2Lib\Controllers\ProgramController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected static $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$httpResponse = new HttpCallBackCatcher();
        self::$controller = ClientFactory::create(self::$httpResponse)->getProgramController();
    }


    /**
     * Retrieve a list of all programs that supports filtering, sorting, and pagination through existing mechanisms.
     */
    public function testTestListPrograms()
    {

        // Set callback and perform API call
        try {
            self::$controller->listPrograms();
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Retrieve a single program configuration
     */
    public function testTestRetrieveProgram()
    {
        // Parameters for the API call
        $progToken = 'prog-4525ab9c-5b22-4e30-028a-45901a10aa0c';

        // Set callback and perform API call
        try {
            self::$controller->retrieveProgram($progToken);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }

    /**
     * Retrieve a single program agreement
     */
    public function testTestRetrieveProgramAgreement()
    {
        // Parameters for the API call
        $progToken = 'prog-4525ab9c-5b22-4e30-028a-45901a10aa0c';
        $agmtToken = 'agmt-45901a10-5b22-4e30-028a-45901a10baa9';

        // Set callback and perform API call
        try {
            self::$controller->retrieveProgramAgreement($progToken, $agmtToken);
        } catch (ApiException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            self::$httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );
    }
}
