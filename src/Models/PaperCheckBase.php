<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

class PaperCheckBase implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $type;

    /**
     * @var float
     */
    private $amount;

    /**
     * @var string
     */
    private $currency;

    /**
     * @var string|null
     */
    private $addressLine1;

    /**
     * @var string|null
     */
    private $addressLine2;

    /**
     * @var string|null
     */
    private $addressLine3;

    /**
     * @var string|null
     */
    private $addressLine4;

    /**
     * @var string|null
     */
    private $addressLine5;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $region;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $postalCode;

    /**
     * @var string|null
     */
    private $premiseNumber;

    /**
     * @var string|null
     */
    private $addressType;

    /**
     * @var string|null
     */
    private $bankAccountOwnershipType;

    /**
     * @var string|null
     */
    private $shippingMethod;

    /**
     * @param float $amount
     * @param string $currency
     */
    public function __construct(float $amount, string $currency)
    {
        $this->amount = $amount;
        $this->currency = $currency;
    }

    /**
     * Returns Type.
     * Transfer type
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Transfer type
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Amount.
     * Amount of the transfer in the specified currency.
     */
    public function getAmount(): float
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     * Amount of the transfer in the specified currency.
     *
     * @required
     * @maps amount
     */
    public function setAmount(float $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Currency.
     * Currency code type for the object
     */
    public function getCurrency(): string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     * Currency code type for the object
     *
     * @required
     * @maps currency
     */
    public function setCurrency(string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Address Line 1.
     * First line of the address that specifies street number, street name, and building name
     */
    public function getAddressLine1(): ?string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * First line of the address that specifies street number, street name, and building name
     *
     * @maps addressLine1
     */
    public function setAddressLine1(?string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address Line 2.
     * Second line of the address that specifies the apartment, suite, or space number (or any other
     * designation not literally part of the physical address)
     */
    public function getAddressLine2(): ?string
    {
        return $this->addressLine2;
    }

    /**
     * Sets Address Line 2.
     * Second line of the address that specifies the apartment, suite, or space number (or any other
     * designation not literally part of the physical address)
     *
     * @maps addressLine2
     */
    public function setAddressLine2(?string $addressLine2): void
    {
        $this->addressLine2 = $addressLine2;
    }

    /**
     * Returns Address Line 3.
     * Third line of the address that specifies the international or business addresses that do not fit on
     * addressLine2
     */
    public function getAddressLine3(): ?string
    {
        return $this->addressLine3;
    }

    /**
     * Sets Address Line 3.
     * Third line of the address that specifies the international or business addresses that do not fit on
     * addressLine2
     *
     * @maps addressLine3
     */
    public function setAddressLine3(?string $addressLine3): void
    {
        $this->addressLine3 = $addressLine3;
    }

    /**
     * Returns Address Line 4.
     * Fourth line of the address, if any
     */
    public function getAddressLine4(): ?string
    {
        return $this->addressLine4;
    }

    /**
     * Sets Address Line 4.
     * Fourth line of the address, if any
     *
     * @maps addressLine4
     */
    public function setAddressLine4(?string $addressLine4): void
    {
        $this->addressLine4 = $addressLine4;
    }

    /**
     * Returns Address Line 5.
     * Fifth line of the address, if any
     */
    public function getAddressLine5(): ?string
    {
        return $this->addressLine5;
    }

    /**
     * Sets Address Line 5.
     * Fifth line of the address, if any
     *
     * @maps addressLine5
     */
    public function setAddressLine5(?string $addressLine5): void
    {
        $this->addressLine5 = $addressLine5;
    }

    /**
     * Returns City.
     * City or town of the business address
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City or town of the business address
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns Region.
     * State, province, or territory of the business address
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     * State, province, or territory of the business address
     *
     * @maps region
     */
    public function setRegion(?string $region): void
    {
        $this->region = $region;
    }

    /**
     * Returns Country.
     * Two-digit country code types
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Two-digit country code types
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Postal Code.
     * Series of letters, digits, or both, included in a postal address for the purpose of sorting mail
     */
    public function getPostalCode(): ?string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     * Series of letters, digits, or both, included in a postal address for the purpose of sorting mail
     *
     * @maps postalCode
     */
    public function setPostalCode(?string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Premise Number.
     * House or building number of the business address
     */
    public function getPremiseNumber(): ?string
    {
        return $this->premiseNumber;
    }

    /**
     * Sets Premise Number.
     * House or building number of the business address
     *
     * @maps premiseNumber
     */
    public function setPremiseNumber(?string $premiseNumber): void
    {
        $this->premiseNumber = $premiseNumber;
    }

    /**
     * Returns Address Type.
     * Classifies the address type (<i>Home</i>, <i>Business</i>, <i>Billing</i>, <i>Shipping</i>)
     */
    public function getAddressType(): ?string
    {
        return $this->addressType;
    }

    /**
     * Sets Address Type.
     * Classifies the address type (<i>Home</i>, <i>Business</i>, <i>Billing</i>, <i>Shipping</i>)
     *
     * @maps addressType
     */
    public function setAddressType(?string $addressType): void
    {
        $this->addressType = $addressType;
    }

    /**
     * Returns Bank Account Ownership Type.
     * Account ownership types
     */
    public function getBankAccountOwnershipType(): ?string
    {
        return $this->bankAccountOwnershipType;
    }

    /**
     * Sets Bank Account Ownership Type.
     * Account ownership types
     *
     * @maps bankAccountOwnershipType
     */
    public function setBankAccountOwnershipType(?string $bankAccountOwnershipType): void
    {
        $this->bankAccountOwnershipType = $bankAccountOwnershipType;
    }

    /**
     * Returns Shipping Method.
     * Shipping method type for a pre-paid card or paper check
     */
    public function getShippingMethod(): ?string
    {
        return $this->shippingMethod;
    }

    /**
     * Sets Shipping Method.
     * Shipping method type for a pre-paid card or paper check
     *
     * @maps shippingMethod
     */
    public function setShippingMethod(?string $shippingMethod): void
    {
        $this->shippingMethod = $shippingMethod;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->type)) {
            $json['type']                     = $this->type;
        }
        $json['amount']                       = $this->amount;
        $json['currency']                     = $this->currency;
        if (isset($this->addressLine1)) {
            $json['addressLine1']             = $this->addressLine1;
        }
        if (isset($this->addressLine2)) {
            $json['addressLine2']             = $this->addressLine2;
        }
        if (isset($this->addressLine3)) {
            $json['addressLine3']             = $this->addressLine3;
        }
        if (isset($this->addressLine4)) {
            $json['addressLine4']             = $this->addressLine4;
        }
        if (isset($this->addressLine5)) {
            $json['addressLine5']             = $this->addressLine5;
        }
        if (isset($this->city)) {
            $json['city']                     = $this->city;
        }
        if (isset($this->region)) {
            $json['region']                   = $this->region;
        }
        if (isset($this->country)) {
            $json['country']                  = $this->country;
        }
        if (isset($this->postalCode)) {
            $json['postalCode']               = $this->postalCode;
        }
        if (isset($this->premiseNumber)) {
            $json['premiseNumber']            = $this->premiseNumber;
        }
        if (isset($this->addressType)) {
            $json['addressType']              = $this->addressType;
        }
        if (isset($this->bankAccountOwnershipType)) {
            $json['bankAccountOwnershipType'] = $this->bankAccountOwnershipType;
        }
        if (isset($this->shippingMethod)) {
            $json['shippingMethod']           = $this->shippingMethod;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
