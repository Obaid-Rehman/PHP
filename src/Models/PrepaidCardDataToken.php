<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

/**
 * Token assigned to the prepaid card
 */
class PrepaidCardDataToken implements \JsonSerializable
{
    /**
     * @var string
     */
    private $token;

    /**
     * @var string|null
     */
    private $url;

    /**
     * @param string $token
     */
    public function __construct(string $token)
    {
        $this->token = $token;
    }

    /**
     * Returns Token.
     */
    public function getToken(): string
    {
        return $this->token;
    }

    /**
     * Sets Token.
     *
     * @required
     * @maps token
     */
    public function setToken(string $token): void
    {
        $this->token = $token;
    }

    /**
     * Returns Url.
     * Full path of the URI to perform the request action against a prepaid card that replaces the need to
     * build the URL with query params
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * Full path of the URI to perform the request action against a prepaid card that replaces the need to
     * build the URL with query params
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['token']   = $this->token;
        if (isset($this->url)) {
            $json['url'] = $this->url;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
