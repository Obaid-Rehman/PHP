<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use PQAPIV2Lib\Utils\DateTimeHelper;
use stdClass;

/**
 * Response from a user request
 */
class UserResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $firstName;

    /**
     * @var string|null
     */
    private $lastName;

    /**
     * @var \DateTime|null
     */
    private $dateOfBirth;

    /**
     * @var string|null
     */
    private $businessName;

    /**
     * @var string|null
     */
    private $businessOperatingName;

    /**
     * @var string|null
     */
    private $businessRegistrationId;

    /**
     * @var string|null
     */
    private $businessRegistrationRegion;

    /**
     * @var string|null
     */
    private $businessRegistrationCountry;

    /**
     * @var string|null
     */
    private $businessContactRole;

    /**
     * @var string|null
     */
    private $businessAddressLine1;

    /**
     * @var string|null
     */
    private $businessAddressLine2;

    /**
     * @var string|null
     */
    private $businessAddressLine3;

    /**
     * @var string|null
     */
    private $businessAddressLine4;

    /**
     * @var string|null
     */
    private $businessAddressLine5;

    /**
     * @var string|null
     */
    private $businessCity;

    /**
     * @var string|null
     */
    private $businessRegion;

    /**
     * @var string|null
     */
    private $businessCountry;

    /**
     * @var string|null
     */
    private $businessPostalCode;

    /**
     * @var string|null
     */
    private $businessPremiseNumber;

    /**
     * @var string|null
     */
    private $businessType;

    /**
     * @var string|null
     */
    private $driverLicenseId;

    /**
     * @var string|null
     */
    private $passportId;

    /**
     * @var string|null
     */
    private $governmentIdType;

    /**
     * @var string|null
     */
    private $governmentId;

    /**
     * @var string
     */
    private $phoneNumber;

    /**
     * @var string
     */
    private $mobileNumber;

    /**
     * @var string
     */
    private $phoneNumberCountry;

    /**
     * @var string
     */
    private $mobileNumberCountry;

    /**
     * @var string|null
     */
    private $addressLine1;

    /**
     * @var string|null
     */
    private $addressLine2;

    /**
     * @var string|null
     */
    private $addressLine3;

    /**
     * @var string|null
     */
    private $addressLine4;

    /**
     * @var string|null
     */
    private $addressLine5;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var string|null
     */
    private $region;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $postalCode;

    /**
     * @var string|null
     */
    private $premiseNumber;

    /**
     * @var string|null
     */
    private $addressType;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @var string|null
     */
    private $employerId;

    /**
     * @var string|null
     */
    private $gender;

    /**
     * @var string|null
     */
    private $userType;

    /**
     * @var string|null
     */
    private $programUserId;

    /**
     * @var string|null
     */
    private $language;

    /**
     * @var string|null
     */
    private $countryOfBirth;

    /**
     * @var string|null
     */
    private $countryOfNationality;

    /**
     * @var string|null
     */
    private $occupation;

    /**
     * @var string|null
     */
    private $taxResidentStatus;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var string|null
     */
    private $token;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var \DateTime|null
     */
    private $createdOn;

    /**
     * @var HaetosParams[]|null
     */
    private $links;

    /**
     * @param string $phoneNumber
     * @param string $mobileNumber
     * @param string $phoneNumberCountry
     * @param string $mobileNumberCountry
     */
    public function __construct(
        string $phoneNumber,
        string $mobileNumber,
        string $phoneNumberCountry,
        string $mobileNumberCountry
    ) {
        $this->phoneNumber = $phoneNumber;
        $this->mobileNumber = $mobileNumber;
        $this->phoneNumberCountry = $phoneNumberCountry;
        $this->mobileNumberCountry = $mobileNumberCountry;
    }

    /**
     * Returns First Name.
     * User's first name. <i>Required</i> if the user is registered as an individual.
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
     * Sets First Name.
     * User's first name. <i>Required</i> if the user is registered as an individual.
     *
     * @maps firstName
     */
    public function setFirstName(?string $firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * Returns Last Name.
     * User's last name. <i>Required</i> if the user is registered as an individual.
     */
    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    /**
     * Sets Last Name.
     * User's last name. <i>Required</i> if the user is registered as an individual.
     *
     * @maps lastName
     */
    public function setLastName(?string $lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * Returns Date of Birth.
     * User's date of birth
     */
    public function getDateOfBirth(): ?\DateTime
    {
        return $this->dateOfBirth;
    }

    /**
     * Sets Date of Birth.
     * User's date of birth
     *
     * @maps dateOfBirth
     * @factory \PQAPIV2Lib\Utils\DateTimeHelper::fromSimpleDate
     */
    public function setDateOfBirth(?\DateTime $dateOfBirth): void
    {
        $this->dateOfBirth = $dateOfBirth;
    }

    /**
     * Returns Business Name.
     * Legal name for the business
     */
    public function getBusinessName(): ?string
    {
        return $this->businessName;
    }

    /**
     * Sets Business Name.
     * Legal name for the business
     *
     * @maps businessName
     */
    public function setBusinessName(?string $businessName): void
    {
        $this->businessName = $businessName;
    }

    /**
     * Returns Business Operating Name.
     * Name under which the business operates
     */
    public function getBusinessOperatingName(): ?string
    {
        return $this->businessOperatingName;
    }

    /**
     * Sets Business Operating Name.
     * Name under which the business operates
     *
     * @maps businessOperatingName
     */
    public function setBusinessOperatingName(?string $businessOperatingName): void
    {
        $this->businessOperatingName = $businessOperatingName;
    }

    /**
     * Returns Business Registration Id.
     * Registration number or ID assigned by a government body
     */
    public function getBusinessRegistrationId(): ?string
    {
        return $this->businessRegistrationId;
    }

    /**
     * Sets Business Registration Id.
     * Registration number or ID assigned by a government body
     *
     * @maps businessRegistrationId
     */
    public function setBusinessRegistrationId(?string $businessRegistrationId): void
    {
        $this->businessRegistrationId = $businessRegistrationId;
    }

    /**
     * Returns Business Registration Region.
     * State, province, or territory where the business is registered
     */
    public function getBusinessRegistrationRegion(): ?string
    {
        return $this->businessRegistrationRegion;
    }

    /**
     * Sets Business Registration Region.
     * State, province, or territory where the business is registered
     *
     * @maps businessRegistrationRegion
     */
    public function setBusinessRegistrationRegion(?string $businessRegistrationRegion): void
    {
        $this->businessRegistrationRegion = $businessRegistrationRegion;
    }

    /**
     * Returns Business Registration Country.
     * Two-digit country code types
     */
    public function getBusinessRegistrationCountry(): ?string
    {
        return $this->businessRegistrationCountry;
    }

    /**
     * Sets Business Registration Country.
     * Two-digit country code types
     *
     * @maps businessRegistrationCountry
     */
    public function setBusinessRegistrationCountry(?string $businessRegistrationCountry): void
    {
        $this->businessRegistrationCountry = $businessRegistrationCountry;
    }

    /**
     * Returns Business Contact Role.
     * Role of the user within the business
     */
    public function getBusinessContactRole(): ?string
    {
        return $this->businessContactRole;
    }

    /**
     * Sets Business Contact Role.
     * Role of the user within the business
     *
     * @maps businessContactRole
     */
    public function setBusinessContactRole(?string $businessContactRole): void
    {
        $this->businessContactRole = $businessContactRole;
    }

    /**
     * Returns Business Address Line 1.
     * First line of the business address that specifies street number, street name, and building name
     */
    public function getBusinessAddressLine1(): ?string
    {
        return $this->businessAddressLine1;
    }

    /**
     * Sets Business Address Line 1.
     * First line of the business address that specifies street number, street name, and building name
     *
     * @maps businessAddressLine1
     */
    public function setBusinessAddressLine1(?string $businessAddressLine1): void
    {
        $this->businessAddressLine1 = $businessAddressLine1;
    }

    /**
     * Returns Business Address Line 2.
     * Second line of the business address that specifies the apartment, suite, or space number (or any
     * other designation not literally part of the physical address)
     */
    public function getBusinessAddressLine2(): ?string
    {
        return $this->businessAddressLine2;
    }

    /**
     * Sets Business Address Line 2.
     * Second line of the business address that specifies the apartment, suite, or space number (or any
     * other designation not literally part of the physical address)
     *
     * @maps businessAddressLine2
     */
    public function setBusinessAddressLine2(?string $businessAddressLine2): void
    {
        $this->businessAddressLine2 = $businessAddressLine2;
    }

    /**
     * Returns Business Address Line 3.
     * Third line of the business address that specifies the international or business addresses that do
     * not fit on businessAddressLine3
     */
    public function getBusinessAddressLine3(): ?string
    {
        return $this->businessAddressLine3;
    }

    /**
     * Sets Business Address Line 3.
     * Third line of the business address that specifies the international or business addresses that do
     * not fit on businessAddressLine3
     *
     * @maps businessAddressLine3
     */
    public function setBusinessAddressLine3(?string $businessAddressLine3): void
    {
        $this->businessAddressLine3 = $businessAddressLine3;
    }

    /**
     * Returns Business Address Line 4.
     * fourth line of the business address street address
     */
    public function getBusinessAddressLine4(): ?string
    {
        return $this->businessAddressLine4;
    }

    /**
     * Sets Business Address Line 4.
     * fourth line of the business address street address
     *
     * @maps businessAddressLine4
     */
    public function setBusinessAddressLine4(?string $businessAddressLine4): void
    {
        $this->businessAddressLine4 = $businessAddressLine4;
    }

    /**
     * Returns Business Address Line 5.
     * Fifth line of the business address street address
     */
    public function getBusinessAddressLine5(): ?string
    {
        return $this->businessAddressLine5;
    }

    /**
     * Sets Business Address Line 5.
     * Fifth line of the business address street address
     *
     * @maps businessAddressLine5
     */
    public function setBusinessAddressLine5(?string $businessAddressLine5): void
    {
        $this->businessAddressLine5 = $businessAddressLine5;
    }

    /**
     * Returns Business City.
     * City the business is registered
     */
    public function getBusinessCity(): ?string
    {
        return $this->businessCity;
    }

    /**
     * Sets Business City.
     * City the business is registered
     *
     * @maps businessCity
     */
    public function setBusinessCity(?string $businessCity): void
    {
        $this->businessCity = $businessCity;
    }

    /**
     * Returns Business Region.
     * State, province, or region the business is registered
     */
    public function getBusinessRegion(): ?string
    {
        return $this->businessRegion;
    }

    /**
     * Sets Business Region.
     * State, province, or region the business is registered
     *
     * @maps businessRegion
     */
    public function setBusinessRegion(?string $businessRegion): void
    {
        $this->businessRegion = $businessRegion;
    }

    /**
     * Returns Business Country.
     * Two-digit country code types
     */
    public function getBusinessCountry(): ?string
    {
        return $this->businessCountry;
    }

    /**
     * Sets Business Country.
     * Two-digit country code types
     *
     * @maps businessCountry
     */
    public function setBusinessCountry(?string $businessCountry): void
    {
        $this->businessCountry = $businessCountry;
    }

    /**
     * Returns Business Postal Code.
     * Postal code for the business address
     */
    public function getBusinessPostalCode(): ?string
    {
        return $this->businessPostalCode;
    }

    /**
     * Sets Business Postal Code.
     * Postal code for the business address
     *
     * @maps businessPostalCode
     */
    public function setBusinessPostalCode(?string $businessPostalCode): void
    {
        $this->businessPostalCode = $businessPostalCode;
    }

    /**
     * Returns Business Premise Number.
     * House number for the business address
     */
    public function getBusinessPremiseNumber(): ?string
    {
        return $this->businessPremiseNumber;
    }

    /**
     * Sets Business Premise Number.
     * House number for the business address
     *
     * @maps businessPremiseNumber
     */
    public function setBusinessPremiseNumber(?string $businessPremiseNumber): void
    {
        $this->businessPremiseNumber = $businessPremiseNumber;
    }

    /**
     * Returns Business Type.
     * Type of business (<i>Corporation</i> or <i>Partnership</i>)
     */
    public function getBusinessType(): ?string
    {
        return $this->businessType;
    }

    /**
     * Sets Business Type.
     * Type of business (<i>Corporation</i> or <i>Partnership</i>)
     *
     * @maps businessType
     */
    public function setBusinessType(?string $businessType): void
    {
        $this->businessType = $businessType;
    }

    /**
     * Returns Driver License Id.
     * User's driver's license number
     */
    public function getDriverLicenseId(): ?string
    {
        return $this->driverLicenseId;
    }

    /**
     * Sets Driver License Id.
     * User's driver's license number
     *
     * @maps driverLicenseId
     */
    public function setDriverLicenseId(?string $driverLicenseId): void
    {
        $this->driverLicenseId = $driverLicenseId;
    }

    /**
     * Returns Passport Id.
     * User's passport number
     */
    public function getPassportId(): ?string
    {
        return $this->passportId;
    }

    /**
     * Sets Passport Id.
     * User's passport number
     *
     * @maps passportId
     */
    public function setPassportId(?string $passportId): void
    {
        $this->passportId = $passportId;
    }

    /**
     * Returns Government Id Type.
     * User's government ID type
     */
    public function getGovernmentIdType(): ?string
    {
        return $this->governmentIdType;
    }

    /**
     * Sets Government Id Type.
     * User's government ID type
     *
     * @maps governmentIdType
     */
    public function setGovernmentIdType(?string $governmentIdType): void
    {
        $this->governmentIdType = $governmentIdType;
    }

    /**
     * Returns Government Id.
     * User's government ID number, such as a <i>SSN</i>, <i>EIN</i>, or <i>SIN</i>
     */
    public function getGovernmentId(): ?string
    {
        return $this->governmentId;
    }

    /**
     * Sets Government Id.
     * User's government ID number, such as a <i>SSN</i>, <i>EIN</i>, or <i>SIN</i>
     *
     * @maps governmentId
     */
    public function setGovernmentId(?string $governmentId): void
    {
        $this->governmentId = $governmentId;
    }

    /**
     * Returns Phone Number.
     * The E.164 formatted primary phone number. This can be the same as the mobile number.
     */
    public function getPhoneNumber(): string
    {
        return $this->phoneNumber;
    }

    /**
     * Sets Phone Number.
     * The E.164 formatted primary phone number. This can be the same as the mobile number.
     *
     * @required
     * @maps phoneNumber
     */
    public function setPhoneNumber(string $phoneNumber): void
    {
        $this->phoneNumber = $phoneNumber;
    }

    /**
     * Returns Mobile Number.
     * The E.164 formatted mobile phone number, required by most financial institutions for account
     * creation, verification, or PSD2 (3DS). Mobile numbers must be unique to a user within a tenant and
     * cannot be shared.
     */
    public function getMobileNumber(): string
    {
        return $this->mobileNumber;
    }

    /**
     * Sets Mobile Number.
     * The E.164 formatted mobile phone number, required by most financial institutions for account
     * creation, verification, or PSD2 (3DS). Mobile numbers must be unique to a user within a tenant and
     * cannot be shared.
     *
     * @required
     * @maps mobileNumber
     */
    public function setMobileNumber(string $mobileNumber): void
    {
        $this->mobileNumber = $mobileNumber;
    }

    /**
     * Returns Phone Number Country.
     * Two-digit country code types
     */
    public function getPhoneNumberCountry(): string
    {
        return $this->phoneNumberCountry;
    }

    /**
     * Sets Phone Number Country.
     * Two-digit country code types
     *
     * @required
     * @maps phoneNumberCountry
     */
    public function setPhoneNumberCountry(string $phoneNumberCountry): void
    {
        $this->phoneNumberCountry = $phoneNumberCountry;
    }

    /**
     * Returns Mobile Number Country.
     * Two-digit country code types
     */
    public function getMobileNumberCountry(): string
    {
        return $this->mobileNumberCountry;
    }

    /**
     * Sets Mobile Number Country.
     * Two-digit country code types
     *
     * @required
     * @maps mobileNumberCountry
     */
    public function setMobileNumberCountry(string $mobileNumberCountry): void
    {
        $this->mobileNumberCountry = $mobileNumberCountry;
    }

    /**
     * Returns Address Line 1.
     * First line of the address that specifies street number, street name, and building name
     */
    public function getAddressLine1(): ?string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * First line of the address that specifies street number, street name, and building name
     *
     * @maps addressLine1
     */
    public function setAddressLine1(?string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address Line 2.
     * Second line of the address that specifies the apartment, suite, or space number (or any other
     * designation not literally part of the physical address)
     */
    public function getAddressLine2(): ?string
    {
        return $this->addressLine2;
    }

    /**
     * Sets Address Line 2.
     * Second line of the address that specifies the apartment, suite, or space number (or any other
     * designation not literally part of the physical address)
     *
     * @maps addressLine2
     */
    public function setAddressLine2(?string $addressLine2): void
    {
        $this->addressLine2 = $addressLine2;
    }

    /**
     * Returns Address Line 3.
     * Third line of the address that specifies the international or business addresses that do not fit on
     * addressLine2
     */
    public function getAddressLine3(): ?string
    {
        return $this->addressLine3;
    }

    /**
     * Sets Address Line 3.
     * Third line of the address that specifies the international or business addresses that do not fit on
     * addressLine2
     *
     * @maps addressLine3
     */
    public function setAddressLine3(?string $addressLine3): void
    {
        $this->addressLine3 = $addressLine3;
    }

    /**
     * Returns Address Line 4.
     * Fourth line of the address, if any
     */
    public function getAddressLine4(): ?string
    {
        return $this->addressLine4;
    }

    /**
     * Sets Address Line 4.
     * Fourth line of the address, if any
     *
     * @maps addressLine4
     */
    public function setAddressLine4(?string $addressLine4): void
    {
        $this->addressLine4 = $addressLine4;
    }

    /**
     * Returns Address Line 5.
     * Fifth line of the address, if any
     */
    public function getAddressLine5(): ?string
    {
        return $this->addressLine5;
    }

    /**
     * Sets Address Line 5.
     * Fifth line of the address, if any
     *
     * @maps addressLine5
     */
    public function setAddressLine5(?string $addressLine5): void
    {
        $this->addressLine5 = $addressLine5;
    }

    /**
     * Returns City.
     * City or town of the business address
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City or town of the business address
     *
     * @maps city
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns Region.
     * State, province, or territory of the business address
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     * State, province, or territory of the business address
     *
     * @maps region
     */
    public function setRegion(?string $region): void
    {
        $this->region = $region;
    }

    /**
     * Returns Country.
     * Two-digit country code types
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Two-digit country code types
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Postal Code.
     * Series of letters, digits, or both, included in a postal address for the purpose of sorting mail
     */
    public function getPostalCode(): ?string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     * Series of letters, digits, or both, included in a postal address for the purpose of sorting mail
     *
     * @maps postalCode
     */
    public function setPostalCode(?string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Premise Number.
     * House or building number of the business address
     */
    public function getPremiseNumber(): ?string
    {
        return $this->premiseNumber;
    }

    /**
     * Sets Premise Number.
     * House or building number of the business address
     *
     * @maps premiseNumber
     */
    public function setPremiseNumber(?string $premiseNumber): void
    {
        $this->premiseNumber = $premiseNumber;
    }

    /**
     * Returns Address Type.
     * Classifies the address type (<i>Home</i>, <i>Business</i>, <i>Billing</i>, <i>Shipping</i>)
     */
    public function getAddressType(): ?string
    {
        return $this->addressType;
    }

    /**
     * Sets Address Type.
     * Classifies the address type (<i>Home</i>, <i>Business</i>, <i>Billing</i>, <i>Shipping</i>)
     *
     * @maps addressType
     */
    public function setAddressType(?string $addressType): void
    {
        $this->addressType = $addressType;
    }

    /**
     * Returns Email.
     * Email address for the user account
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     * Email address for the user account
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Employer Id.
     * User's employer identifier
     */
    public function getEmployerId(): ?string
    {
        return $this->employerId;
    }

    /**
     * Sets Employer Id.
     * User's employer identifier
     *
     * @maps employerId
     */
    public function setEmployerId(?string $employerId): void
    {
        $this->employerId = $employerId;
    }

    /**
     * Returns Gender.
     * Gender as a user identifies
     */
    public function getGender(): ?string
    {
        return $this->gender;
    }

    /**
     * Sets Gender.
     * Gender as a user identifies
     *
     * @maps gender
     */
    public function setGender(?string $gender): void
    {
        $this->gender = $gender;
    }

    /**
     * Returns User Type.
     * Account holder's profile type
     */
    public function getUserType(): ?string
    {
        return $this->userType;
    }

    /**
     * Sets User Type.
     * Account holder's profile type
     *
     * @maps userType
     */
    public function setUserType(?string $userType): void
    {
        $this->userType = $userType;
    }

    /**
     * Returns Program User Id.
     * Program identifier for the user
     */
    public function getProgramUserId(): ?string
    {
        return $this->programUserId;
    }

    /**
     * Sets Program User Id.
     * Program identifier for the user
     *
     * @maps programUserId
     */
    public function setProgramUserId(?string $programUserId): void
    {
        $this->programUserId = $programUserId;
    }

    /**
     * Returns Language.
     * Language type in IETF's BCP 47 format
     */
    public function getLanguage(): ?string
    {
        return $this->language;
    }

    /**
     * Sets Language.
     * Language type in IETF's BCP 47 format
     *
     * @maps language
     */
    public function setLanguage(?string $language): void
    {
        $this->language = $language;
    }

    /**
     * Returns Country of Birth.
     * Two-digit country code types
     */
    public function getCountryOfBirth(): ?string
    {
        return $this->countryOfBirth;
    }

    /**
     * Sets Country of Birth.
     * Two-digit country code types
     *
     * @maps countryOfBirth
     */
    public function setCountryOfBirth(?string $countryOfBirth): void
    {
        $this->countryOfBirth = $countryOfBirth;
    }

    /**
     * Returns Country of Nationality.
     * Two-digit country code types
     */
    public function getCountryOfNationality(): ?string
    {
        return $this->countryOfNationality;
    }

    /**
     * Sets Country of Nationality.
     * Two-digit country code types
     *
     * @maps countryOfNationality
     */
    public function setCountryOfNationality(?string $countryOfNationality): void
    {
        $this->countryOfNationality = $countryOfNationality;
    }

    /**
     * Returns Occupation.
     * Type of occupation for the user
     */
    public function getOccupation(): ?string
    {
        return $this->occupation;
    }

    /**
     * Sets Occupation.
     * Type of occupation for the user
     *
     * @maps occupation
     */
    public function setOccupation(?string $occupation): void
    {
        $this->occupation = $occupation;
    }

    /**
     * Returns Tax Resident Status.
     * Tax resident status type of a country
     */
    public function getTaxResidentStatus(): ?string
    {
        return $this->taxResidentStatus;
    }

    /**
     * Sets Tax Resident Status.
     * Tax resident status type of a country
     *
     * @maps taxResidentStatus
     */
    public function setTaxResidentStatus(?string $taxResidentStatus): void
    {
        $this->taxResidentStatus = $taxResidentStatus;
    }

    /**
     * Returns Currency.
     * Currency code type for the object
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     * Currency code type for the object
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Token.
     * Token representing the resource, prefixed with <i>user-</i>, <i>dest-</i>, <i>xfer-</i>, <i>acct-
     * </i>, <i>pmnt-</i>, or <i>docu-</i>.
     */
    public function getToken(): ?string
    {
        return $this->token;
    }

    /**
     * Sets Token.
     * Token representing the resource, prefixed with <i>user-</i>, <i>dest-</i>, <i>xfer-</i>, <i>acct-
     * </i>, <i>pmnt-</i>, or <i>docu-</i>.
     *
     * @maps token
     */
    public function setToken(?string $token): void
    {
        $this->token = $token;
    }

    /**
     * Returns Status.
     * Current status of the user
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Current status of the user
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created On.
     * Time at which the object was created.
     */
    public function getCreatedOn(): ?\DateTime
    {
        return $this->createdOn;
    }

    /**
     * Sets Created On.
     * Time at which the object was created.
     *
     * @maps createdOn
     * @factory \PQAPIV2Lib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedOn(?\DateTime $createdOn): void
    {
        $this->createdOn = $createdOn;
    }

    /**
     * Returns Links.
     *
     * @return HaetosParams[]|null
     */
    public function getLinks(): ?array
    {
        return $this->links;
    }

    /**
     * Sets Links.
     *
     * @maps links
     *
     * @param HaetosParams[]|null $links
     */
    public function setLinks(?array $links): void
    {
        $this->links = $links;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->firstName)) {
            $json['firstName']                   = $this->firstName;
        }
        if (isset($this->lastName)) {
            $json['lastName']                    = $this->lastName;
        }
        if (isset($this->dateOfBirth)) {
            $json['dateOfBirth']                 = DateTimeHelper::toSimpleDate($this->dateOfBirth);
        }
        if (isset($this->businessName)) {
            $json['businessName']                = $this->businessName;
        }
        if (isset($this->businessOperatingName)) {
            $json['businessOperatingName']       = $this->businessOperatingName;
        }
        if (isset($this->businessRegistrationId)) {
            $json['businessRegistrationId']      = $this->businessRegistrationId;
        }
        if (isset($this->businessRegistrationRegion)) {
            $json['businessRegistrationRegion']  = $this->businessRegistrationRegion;
        }
        if (isset($this->businessRegistrationCountry)) {
            $json['businessRegistrationCountry'] = $this->businessRegistrationCountry;
        }
        if (isset($this->businessContactRole)) {
            $json['businessContactRole']         = $this->businessContactRole;
        }
        if (isset($this->businessAddressLine1)) {
            $json['businessAddressLine1']        = $this->businessAddressLine1;
        }
        if (isset($this->businessAddressLine2)) {
            $json['businessAddressLine2']        = $this->businessAddressLine2;
        }
        if (isset($this->businessAddressLine3)) {
            $json['businessAddressLine3']        = $this->businessAddressLine3;
        }
        if (isset($this->businessAddressLine4)) {
            $json['businessAddressLine4']        = $this->businessAddressLine4;
        }
        if (isset($this->businessAddressLine5)) {
            $json['businessAddressLine5']        = $this->businessAddressLine5;
        }
        if (isset($this->businessCity)) {
            $json['businessCity']                = $this->businessCity;
        }
        if (isset($this->businessRegion)) {
            $json['businessRegion']              = $this->businessRegion;
        }
        if (isset($this->businessCountry)) {
            $json['businessCountry']             = $this->businessCountry;
        }
        if (isset($this->businessPostalCode)) {
            $json['businessPostalCode']          = $this->businessPostalCode;
        }
        if (isset($this->businessPremiseNumber)) {
            $json['businessPremiseNumber']       = $this->businessPremiseNumber;
        }
        if (isset($this->businessType)) {
            $json['businessType']                = $this->businessType;
        }
        if (isset($this->driverLicenseId)) {
            $json['driverLicenseId']             = $this->driverLicenseId;
        }
        if (isset($this->passportId)) {
            $json['passportId']                  = $this->passportId;
        }
        if (isset($this->governmentIdType)) {
            $json['governmentIdType']            = $this->governmentIdType;
        }
        if (isset($this->governmentId)) {
            $json['governmentId']                = $this->governmentId;
        }
        $json['phoneNumber']                     = $this->phoneNumber;
        $json['mobileNumber']                    = $this->mobileNumber;
        $json['phoneNumberCountry']              = $this->phoneNumberCountry;
        $json['mobileNumberCountry']             = $this->mobileNumberCountry;
        if (isset($this->addressLine1)) {
            $json['addressLine1']                = $this->addressLine1;
        }
        if (isset($this->addressLine2)) {
            $json['addressLine2']                = $this->addressLine2;
        }
        if (isset($this->addressLine3)) {
            $json['addressLine3']                = $this->addressLine3;
        }
        if (isset($this->addressLine4)) {
            $json['addressLine4']                = $this->addressLine4;
        }
        if (isset($this->addressLine5)) {
            $json['addressLine5']                = $this->addressLine5;
        }
        if (isset($this->city)) {
            $json['city']                        = $this->city;
        }
        if (isset($this->region)) {
            $json['region']                      = $this->region;
        }
        if (isset($this->country)) {
            $json['country']                     = $this->country;
        }
        if (isset($this->postalCode)) {
            $json['postalCode']                  = $this->postalCode;
        }
        if (isset($this->premiseNumber)) {
            $json['premiseNumber']               = $this->premiseNumber;
        }
        if (isset($this->addressType)) {
            $json['addressType']                 = $this->addressType;
        }
        if (isset($this->email)) {
            $json['email']                       = $this->email;
        }
        if (isset($this->employerId)) {
            $json['employerId']                  = $this->employerId;
        }
        if (isset($this->gender)) {
            $json['gender']                      = $this->gender;
        }
        if (isset($this->userType)) {
            $json['userType']                    = $this->userType;
        }
        if (isset($this->programUserId)) {
            $json['programUserId']               = $this->programUserId;
        }
        if (isset($this->language)) {
            $json['language']                    = $this->language;
        }
        if (isset($this->countryOfBirth)) {
            $json['countryOfBirth']              = $this->countryOfBirth;
        }
        if (isset($this->countryOfNationality)) {
            $json['countryOfNationality']        = $this->countryOfNationality;
        }
        if (isset($this->occupation)) {
            $json['occupation']                  = $this->occupation;
        }
        if (isset($this->taxResidentStatus)) {
            $json['taxResidentStatus']           = $this->taxResidentStatus;
        }
        if (isset($this->currency)) {
            $json['currency']                    = $this->currency;
        }
        if (isset($this->token)) {
            $json['token']                       = $this->token;
        }
        if (isset($this->status)) {
            $json['status']                      = $this->status;
        }
        if (isset($this->createdOn)) {
            $json['createdOn']                   = DateTimeHelper::toRfc3339DateTime($this->createdOn);
        }
        if (isset($this->links)) {
            $json['links']                       = $this->links;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
