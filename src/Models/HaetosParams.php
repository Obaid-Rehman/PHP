<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

/**
 * Hypermedia as the Engine of Application State (HAETOS) parameters used in a query.
 */
class HaetosParams implements \JsonSerializable
{
    /**
     * @var HaetosRelationship
     */
    private $params;

    /**
     * @var string
     */
    private $href;

    /**
     * @param HaetosRelationship $params
     * @param string $href
     */
    public function __construct(HaetosRelationship $params, string $href)
    {
        $this->params = $params;
        $this->href = $href;
    }

    /**
     * Returns Params.
     * Indicates the HATEOS relationship between the target and current resources.
     */
    public function getParams(): HaetosRelationship
    {
        return $this->params;
    }

    /**
     * Sets Params.
     * Indicates the HATEOS relationship between the target and current resources.
     *
     * @required
     * @maps params
     */
    public function setParams(HaetosRelationship $params): void
    {
        $this->params = $params;
    }

    /**
     * Returns Href.
     * URL for resource described by the relationship.
     */
    public function getHref(): string
    {
        return $this->href;
    }

    /**
     * Sets Href.
     * URL for resource described by the relationship.
     *
     * @required
     * @maps href
     */
    public function setHref(string $href): void
    {
        $this->href = $href;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['params'] = $this->params;
        $json['href']   = $this->href;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
