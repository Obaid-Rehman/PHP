<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

/**
 * Required details of the monetary source.
 */
class SourceMonetaryRequired implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $sourceAmount;

    /**
     * @var string|null
     */
    private $sourceCurrency;

    /**
     * Returns Source Amount.
     * Amount of the transfer in the specified currency.
     */
    public function getSourceAmount(): ?float
    {
        return $this->sourceAmount;
    }

    /**
     * Sets Source Amount.
     * Amount of the transfer in the specified currency.
     *
     * @maps sourceAmount
     */
    public function setSourceAmount(?float $sourceAmount): void
    {
        $this->sourceAmount = $sourceAmount;
    }

    /**
     * Returns Source Currency.
     * Currency code type for the object
     */
    public function getSourceCurrency(): ?string
    {
        return $this->sourceCurrency;
    }

    /**
     * Sets Source Currency.
     * Currency code type for the object
     *
     * @maps sourceCurrency
     */
    public function setSourceCurrency(?string $sourceCurrency): void
    {
        $this->sourceCurrency = $sourceCurrency;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->sourceAmount)) {
            $json['sourceAmount']   = $this->sourceAmount;
        }
        if (isset($this->sourceCurrency)) {
            $json['sourceCurrency'] = $this->sourceCurrency;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
