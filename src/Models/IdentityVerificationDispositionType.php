<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

/**
 * In combination with the <i>Disposition</i> type, the <i>Result</i> type provides the results of an
 * IDV check. A <i>Dispositioned</i> result of <i>FINAL PASS</i> represents a passing check, whereas a
 * <i>TRANSIENT FAIL</i> is still being processed but has failed at least one phase of the check. Until
 * the disposition is <i>FINAL</i>, a result has not been determined.
 */
class IdentityVerificationDispositionType implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $idvDispostion;

    /**
     * Returns Idv Dispostion.
     * In combination with the <i>Disposition</i> type, the <i>Result</i> type provides the results of an
     * IDV check. A <i>Dispositioned</i> result of <i>FINAL PASS</i> represents a passing check, whereas a
     * <i>TRANSIENT FAIL</i> is still being processed but has failed at least one phase of the check. Until
     * the disposition is <i>FINAL</i>, a result has not been determined.
     */
    public function getIdvDispostion(): ?string
    {
        return $this->idvDispostion;
    }

    /**
     * Sets Idv Dispostion.
     * In combination with the <i>Disposition</i> type, the <i>Result</i> type provides the results of an
     * IDV check. A <i>Dispositioned</i> result of <i>FINAL PASS</i> represents a passing check, whereas a
     * <i>TRANSIENT FAIL</i> is still being processed but has failed at least one phase of the check. Until
     * the disposition is <i>FINAL</i>, a result has not been determined.
     *
     * @maps idvDispostion
     */
    public function setIdvDispostion(?string $idvDispostion): void
    {
        $this->idvDispostion = $idvDispostion;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->idvDispostion)) {
            $json['idvDispostion'] = $this->idvDispostion;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
