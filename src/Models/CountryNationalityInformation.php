<?php

declare(strict_types=1);

/*
 * PQAPIV2Lib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PQAPIV2Lib\Models;

use stdClass;

class CountryNationalityInformation implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $countryOfBirth;

    /**
     * @var string|null
     */
    private $countryOfNationality;

    /**
     * Returns Country of Birth.
     * Two-digit country code types
     */
    public function getCountryOfBirth(): ?string
    {
        return $this->countryOfBirth;
    }

    /**
     * Sets Country of Birth.
     * Two-digit country code types
     *
     * @maps countryOfBirth
     */
    public function setCountryOfBirth(?string $countryOfBirth): void
    {
        $this->countryOfBirth = $countryOfBirth;
    }

    /**
     * Returns Country of Nationality.
     * Two-digit country code types
     */
    public function getCountryOfNationality(): ?string
    {
        return $this->countryOfNationality;
    }

    /**
     * Sets Country of Nationality.
     * Two-digit country code types
     *
     * @maps countryOfNationality
     */
    public function setCountryOfNationality(?string $countryOfNationality): void
    {
        $this->countryOfNationality = $countryOfNationality;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->countryOfBirth)) {
            $json['countryOfBirth']       = $this->countryOfBirth;
        }
        if (isset($this->countryOfNationality)) {
            $json['countryOfNationality'] = $this->countryOfNationality;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
